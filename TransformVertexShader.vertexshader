#version 330 core

// Input vertex data - different for all executions of this shader.
layout(location = 0) in vec3 vertex_position_modelspace;
layout(location = 1) in vec4 vertex_color;
layout(location = 2) in vec2 vertex_UV;

// Output data - will be interpolated for each fragment.
out vec4 fragment_color;
out vec2 UV;

uniform mat4 MVP;
uniform mat4 M;

void main(){

	// Output position of the vertex, in clip space : M * MVP * position
	gl_Position =  MVP * M * vec4(vertex_position_modelspace,1);

	// The color of each vertex will be interpolated
	// to produce the color of each fragment
	fragment_color = vertex_color;

  UV = vertex_UV;
}
